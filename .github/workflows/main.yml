name: SonarQube Analysis, Build, and Deploy

on:
  push:
    branches:
      - main

jobs:
  sonarqube:
    name: SonarQube Static Analysis
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up Java
      uses: actions/setup-java@v2
      with:
        java-version: 17
        distribution: adopt

    - name: Delete SonarQube Cache
      run: |
        if [ -d $HOME/.sonar ]; then
          rm -rf $HOME/.sonar
        fi

    - name: Download SonarScanner
      run: |
        # Download the SonarScanner
        curl -sSL "https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.0.2966-linux.zip" -o sonar-scanner.zip
        
        # Verify the size of the downloaded file
        ls -lh sonar-scanner.zip
        
        # Ensure it's downloaded as a valid zip file by checking its signature
        unzip -t sonar-scanner.zip || exit 1  # This will verify if the zip is correct

        # Unzip the SonarScanner
        unzip sonar-scanner.zip -d .
        
        # Update SonarScanner properties with your secrets
        echo "sonar.host.url=${{ secrets.SONAR_HOST_URL }}" >> sonar-scanner-5.0.0.2966-linux/conf/sonar-scanner.properties
        echo "sonar.login=${{ secrets.SONAR_TOKEN }}" >> sonar-scanner-5.0.0.2966-linux/conf/sonar-scanner.properties
        echo "sonar.projectKey=my-project-key" >> sonar-scanner-5.0.0.2966-linux/conf/sonar-scanner.properties

    - name: Run SonarQube Scan
      run: |
        # Run the SonarScanner with the project key
        ./sonar-scanner-5.0.0.2966-linux/bin/sonar-scanner \
          -Dsonar.projectKey=my-project-key \
          -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
          -Dsonar.login=${{ secrets.SONAR_TOKEN }}

  docker:
    name: Dockerize and Run Application
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io
        sudo systemctl start docker
        sudo systemctl enable docker
        
    - name: Build Docker Image
      run: docker build -t my-java-app .

    - name: Run Docker Container on Port 8081
      run: docker run -d -p 8081:8080 --name my-java-app my-java-app

    - name: Verify Application is Running
      run: docker ps

    - name: Print Access URL
      run: echo "Application is running on http://localhost:8081"
